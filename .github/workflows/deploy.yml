name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Export User Service .env variables
        run: |
          if [ -f user-service/.env ]; then
            export $(cat user-service/.env | xargs)
          fi

      # Build and push the user service Docker image
      - name: Build and push User Service Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/userservice:latest ./user-service
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/userservice:latest

      - name: Export Product Service .env variables
        run: |
          if [ -f product-service/.env ]; then
            export $(cat product-service/.env | xargs)
          fi

      # Build and push the product service Docker image
      - name: Build and push Product Service Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/productservice:latest ./product-service
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/productservice:latest

      - name: Export Order Service .env variables
        run: |
          if [ -f order-service/.env ]; then
            export $(cat order-service/.env | xargs)
          fi

      # Build and push the order service Docker image
      - name: Build and push Order Service Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/orderservice:latest ./order-service
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/orderservice:latest

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy the user service to Azure Container Apps
      - name: Deploy User Service to Azure Container Apps
        run: |
          az containerapp create \
            --name service1 \
            --resource-group myresourcegroup \
            --environment mycontainerappenv \
            --image ${{ secrets.DOCKER_HUB_USERNAME }}/userservice:latest \
            --target-port 8003 \
            --ingress 'external' \
            --env-vars \
              DATABASE_URL=${{ secrets.USER_SERVICE_DATABASE_URL }} \
              SECRET_KEY=${{ secrets.SECRET_KEY }} \
              ALGORITHM=${{ secrets.ALGORITHM }} \
              ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} \
              REFRESH_TOKEN_EXPIRE_MINUTES=${{ secrets.REFRESH_TOKEN_EXPIRE_MINUTES }} \
              JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY }} \
              KAFKA_PRODUCER_TOPIC=${{ secrets.USER_SERVICE_KAFKA_PRODUCER_TOPIC }} \
              KAFKA_CONSUMER_TOPIC=${{ secrets.USER_SERVICE_KAFKA_CONSUMER_TOPIC }} \
              KAFKA_BROKER_URL=${{ secrets.USER_SERVICE_KAFKA_BROKER_URL }} \
              PRODUCT_SERVICE_URL=${{ secrets.PRODUCT_SERVICE_URL }} \
              PAYMENT_SERVICE_URL=${{ secrets.PAYMENT_SERVICE_URL }} \
              ORDER_SERVICE_URL=${{ secrets.ORDER_SERVICE_URL }} \
              INVENTORY_SERVICE_URL=${{ secrets.INVENTORY_SERVICE_URL }} \
              NOTIFICATION_SERVICE_URL=${{ secrets.NOTIFICATION_SERVICE_URL }}

      # Deploy the product service to Azure Container Apps
      - name: Deploy Product Service to Azure Container Apps
        run: |
          az containerapp create \
            --name service2 \
            --resource-group myresourcegroup \
            --environment mycontainerappenv \
            --image ${{ secrets.DOCKER_HUB_USERNAME }}/productservice:latest \
            --target-port 8004 \
            --ingress 'external' \
            --env-vars \
              DATABASE_URL=${{   secrets.PRODUCT_SERVICE_DATABASE_URL  }} \
              USER_SERVICE_URL=${{   secrets.USER_SERVICE_URL  }} \
              INVENTORY_SERVICE_URL=${{  secrets.INVENTORY_SERVICE_URL  }} \
              # Add other environment variables for product service

      # Deploy the order service to Azure Container Apps
      - name: Deploy Order Service to Azure Container Apps
        run: |
          az containerapp create \
            --name service3 \
            --resource-group myresourcegroup \
            --environment mycontainerappenv \
            --image ${{ secrets.DOCKER_HUB_USERNAME }}/orderservice:latest \
            --target-port 8005 \
            --ingress 'external' \
            --env-vars \
              DATABASE_URL=${{ secrets.ORDER_SERVICE_DATABASE_URL  }} \
              KAFKA_BOOTSTRAP_SERVER=${{ secrets.ORDER_SERVICE_KAFKA_BOOTSTRAP_SERVER  }} \
              KAFKA_ORDER_TOPIC=${{  secrets.ORDER_SERVICE_KAFKA_ORDER_TOPIC }} \
              USER_SERVICE_URL=${{ secrets.USER_SERVICE_URL  }} \ 
              PRODUCT_SERVICE_URL=${{  secrets.PRODUCT_SERVICE_URL }} \
              INVENTORY_SERVICE_URL=${{  secrets.INVENTORY_SERVICE_URL }} \
              # Add other environment variables for order service
